import google.generativeai as genai

from pathlib import Path
from sys import exit

keys_file_path = Path('../keys.txt')
FILE_NOT_FND_ERR_MSG = (f"Error: File containing keys not found at {keys_file_path}. "
                        f"Please enter a valid file "
                        f"path.")


def get_api_key(api_name: str) -> str:
    """test it but rewrite right after successful contact and response has been made with
    the api to use an environment variable instead"""

    api_key_from_file = None

    try:
        with open(keys_file_path, 'r') as keys_handle:
            for line in keys_handle:
                if line.startswith(api_name):
                    api_key_from_file = line.split()[1]
                    break
                else:
                    continue
        if api_key_from_file is None:
            raise ValueError(f"Key for {api_name} not found in {keys_file_path}")
        else:
            return api_key_from_file

    except FileNotFoundError:
        print(FILE_NOT_FND_ERR_MSG)
    except Exception as e:
        print(f"Error reading keys file: {e}")
        exit(f"Review {keys_file_path} for valid api key")


def gemini_send_prompt(api_name): # This looks weird to me
    GOOGLE_API_KEY = get_api_key(api_name)

    genai.configure(api_key=GOOGLE_API_KEY)

    model = genai.GenerativeModel('gemini-pro')
    response = model.generate_content(f"Optimize the following code for the stated problem which is commented out: ")


def gemini_response():
    pass
